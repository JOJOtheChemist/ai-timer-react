
🚀 ============================================================================
   User Message Setting API 测试开始
================================================================================
🔧 准备测试数据...
✅ 测试数据准备完成
   - 测试用户ID: 1001

================================================================================
测试1: GET /api/v1/users/me/message-settings - 获取用户消息设置
================================================================================
请求: GET http://localhost:8000/api/v1/users/me/message-settings
参数: {'user_id': 1001}
响应状态: 200
响应内容: {'tutor_reminder': False, 'private_reminder': False, 'system_reminder': False, 'reminder_type': 'push', 'keep_days': 7, 'auto_read_system': False, 'user_id': 1001, 'create_time': '2025-10-02T11:22:47.810399+08:00', 'update_time': '2025-10-02T11:22:47.810399+08:00'}
✅ 测试通过

================================================================================
测试2: PUT /api/v1/users/me/message-settings - 更新用户消息设置
================================================================================
请求: PUT http://localhost:8000/api/v1/users/me/message-settings
参数: {'user_id': 1001}
请求体: {'reminder_type': 'email', 'keep_days': 60}
响应状态: 200
响应内容: {'success': True, 'message': '消息设置更新成功', 'data': {'user_id': 1001, 'updated_fields': {'reminder_type': 'email', 'keep_days': 60}, 'update_time': '2025-10-02T11:22:47.817751+08:00'}}
✅ 数据库验证: keep_days = 60
✅ 测试通过

================================================================================
测试3: POST /api/v1/users/me/message-settings/reset - 重置消息设置
================================================================================
请求: POST http://localhost:8000/api/v1/users/me/message-settings/reset
参数: {'user_id': 1001}
响应状态: 200
响应内容: {'success': True, 'message': '消息设置已重置为默认值', 'data': {'user_id': 1001, 'reset_time': '2025-10-02T11:22:47.830579+08:00', 'default_settings': {'reminder_type': 0, 'keep_days': 7}}}
✅ 数据库验证: reminder_type=0, keep_days=7
✅ 测试通过

================================================================================
测试4: GET /api/v1/users/me/message-settings/summary - 获取设置摘要
================================================================================
请求: GET http://localhost:8000/api/v1/users/me/message-settings/summary
参数: {'user_id': 1001}
响应状态: 200
响应内容: {'user_id': 1001, 'enabled_reminders': [], 'reminder_count': 0, 'reminder_type': 'none', 'keep_days': 7, 'auto_read_system': False, 'is_default_settings': True}
✅ 测试通过

================================================================================
测试5: GET /api/v1/users/me/reminder-preferences - 获取提醒偏好
================================================================================
请求: GET http://localhost:8000/api/v1/users/me/reminder-preferences
参数: {'user_id': 1001}
响应状态: 200
响应内容: {'user_id': 1001, 'tutor_reminder_enabled': False, 'private_reminder_enabled': False, 'system_reminder_enabled': False, 'reminder_type': 'none', 'auto_read_system': False}
✅ 测试通过

================================================================================
测试6: GET /api/v1/users/me/cleanup-settings - 获取清理设置
================================================================================
请求: GET http://localhost:8000/api/v1/users/me/cleanup-settings
参数: {'user_id': 1001}
响应状态: 200
响应内容: {'user_id': 1001, 'keep_days': 7, 'auto_cleanup_enabled': True}
✅ 测试通过

================================================================================
测试7: POST /api/v1/users/me/check-reminder - 检查提醒设置
================================================================================
请求: POST http://localhost:8000/api/v1/users/me/check-reminder
参数: {'user_id': 1001, 'message_type': 'tutor'}
响应状态: 200
响应内容: {'user_id': 1001, 'message_type': 'tutor', 'should_send_reminder': False}
✅ 测试通过

================================================================================
测试8: 管理员接口测试
================================================================================

  获取提醒用户列表:
  请求: GET http://localhost:8000/api/v1/users/admin/reminder-users/tutor
  响应状态: 200
  ✅ 获取提醒用户列表 - 通过

  获取自动已读用户列表:
  请求: GET http://localhost:8000/api/v1/users/admin/auto-read-users
  响应状态: 200
  ✅ 获取自动已读用户列表 - 通过

  获取清理候选用户:
  请求: GET http://localhost:8000/api/v1/users/admin/cleanup-candidates
  响应状态: 200
  ✅ 获取清理候选用户 - 通过

🧹 清理测试数据...
✅ 测试数据清理完成

================================================================================
📊 测试总结
================================================================================
✅ 通过 - 获取用户消息设置
✅ 通过 - 更新用户消息设置
✅ 通过 - 重置消息设置
✅ 通过 - 获取设置摘要
✅ 通过 - 获取提醒偏好
✅ 通过 - 获取清理设置
✅ 通过 - 检查提醒设置
✅ 通过 - 管理员接口
================================================================================
总计: 8/8 测试通过 (100.0%)
================================================================================
