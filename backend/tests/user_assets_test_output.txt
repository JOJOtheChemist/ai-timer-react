
🚀 ============================================================================
   User Assets API 测试开始
================================================================================
🔧 准备测试数据...
✅ 测试数据准备完成
   - 测试用户ID: 1001, 初始钻石: 500
   - 测试导师ID: 1
   - 测试服务ID: 1, 价格: 100钻石

================================================================================
测试1: GET /api/v1/users/me/assets - 获取用户资产信息
================================================================================
请求: GET http://localhost:8000/api/v1/users/me/assets
参数: {'user_id': 1001}
响应状态: 500
响应内容: {'detail': "服务器内部错误: 1 validation errors:\n  {'type': 'model_attributes_type', 'loc': ('response',), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': None}\n", 'type': 'ResponseValidationError'}
❌ 测试失败: {"detail":"服务器内部错误: 1 validation errors:\n  {'type': 'model_attributes_type', 'loc': ('response',), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': None}\n","type":"ResponseValidationError"}

================================================================================
测试2: POST /api/v1/users/me/assets/recharge - 创建充值订单
================================================================================
请求: POST http://localhost:8000/api/v1/users/me/assets/recharge
参数: {'user_id': 1001}
请求体: {'amount': 50.0, 'payment_method': 'alipay'}
响应状态: 500
响应内容: {'detail': '创建充值订单失败: 400: 创建充值订单失败'}
❌ 测试失败: {"detail":"创建充值订单失败: 400: 创建充值订单失败"}

================================================================================
测试3: GET /api/v1/users/me/assets/records - 获取资产变动记录
================================================================================
请求: GET http://localhost:8000/api/v1/users/me/assets/records
参数: {'user_id': 1001, 'limit': 10, 'offset': 0}
响应状态: 200
响应内容: []
❌ 测试异常: 

================================================================================
测试4: POST /api/v1/users/me/assets/purchase - 购买导师服务
================================================================================
购买前余额: 500 钻石
请求: POST http://localhost:8000/api/v1/users/me/assets/purchase
参数: {'user_id': 1001}
请求体: {'tutor_id': 1, 'service_id': 1}
响应状态: 500
响应内容: {'detail': '购买导师服务失败: 购买导师服务失败: 钻石余额不足'}
❌ 测试失败: {"detail":"购买导师服务失败: 购买导师服务失败: 钻石余额不足"}

================================================================================
测试5: GET /api/v1/users/me/orders/tutor - 查询导师服务订单历史
================================================================================
请求: GET http://localhost:8000/api/v1/users/me/orders/tutor
参数: {'user_id': 1001, 'page': 1, 'page_size': 20}
响应状态: 500
响应内容: {'detail': "获取导师服务订单失败: 获取导师服务订单失败: 获取用户订单失败: Textual SQL expression '\\n            SELECT \\n    ...' should be explicitly declared as text('\\n            SELECT \\n    ...')"}
❌ 测试失败: {"detail":"获取导师服务订单失败: 获取导师服务订单失败: 获取用户订单失败: Textual SQL expression '\\n            SELECT \\n    ...' should be explicitly declared as text('\\n            SELECT \\n    ...')"}

================================================================================
测试6: POST /api/v1/users/me/assets/purchase - 余额不足测试
================================================================================
❌ 测试异常: window functions are not allowed in WHERE
LINE 5: ...heckin_time) = CURRENT_DATE - INTERVAL '1 day' * (ROW_NUMBER...
                                                             ^
QUERY:  SELECT COUNT(*) >= (badge_record.condition_config->>'days')::INTEGER
                                                  FROM checkin_record cr
                WHERE cr.user_id = target_user_id
                AND cr.checkin_time >= CURRENT_DATE - INTERVAL '1 day' * (badge_record.condition_config->>'days')::INTEGER
                AND DATE(cr.checkin_time) = CURRENT_DATE - INTERVAL '1 day' * (ROW_NUMBER() OVER (ORDER BY cr.checkin_time DESC) - 1)
CONTEXT:  PL/pgSQL function check_badge_conditions(bigint,bigint) line 22 at SQL statement
SQL statement "SELECT check_badge_conditions(NEW.user_id)"
PL/pgSQL function auto_check_badges() line 12 at PERFORM


🧹 清理测试数据...
✅ 测试数据清理完成

================================================================================
📊 测试总结
================================================================================
❌ 失败 - 获取用户资产信息
❌ 失败 - 创建充值订单
❌ 失败 - 获取资产变动记录
❌ 失败 - 购买导师服务
❌ 失败 - 查询导师服务订单历史
❌ 失败 - 余额不足测试
================================================================================
总计: 0/6 测试通过 (0.0%)
================================================================================
